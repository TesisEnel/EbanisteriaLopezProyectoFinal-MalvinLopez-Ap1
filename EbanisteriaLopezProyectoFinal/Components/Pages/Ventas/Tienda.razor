@page "/store"
@using EbanisteriaLopezProyectoFinal.Components.Services
@using EbanisteriaLopezProyectoFinal.Components.Models
@using Microsoft.AspNetCore.Components.Authorization
@using Microsoft.AspNetCore.Authorization
@inject ProductoService ProductoService
@inject CarritoService CarritoService
@inject EstadoProductoService EstadoProductoService
@inject IToastService Toast
@inject NavigationManager NavigationManager
@rendermode InteractiveServer

<PageTitle>Tienda - Ebanisteria Lopez</PageTitle>

<main>
    <header class="fixed-top navbar-light bg-secondary">
        <nav class="navbar navbar-expand-lg container-fluid px-0">
            <a class="navbar-brand me-auto" href="/">
                <img src="/imagenes/logo.png" alt="Ebanisteria Lopez Logo" class="img-fluid" style="height: 75px; object-fit: contain; margin-left: 50px;" />
            </a>

            <button class="navbar-toggler d-lg-none" type="button" data-bs-toggle="collapse" data-bs-target="#navbarNav" aria-controls="navbarNav" aria-expanded="false" aria-label="Toggle navigation">
                <span class="navbar-toggler-icon"></span>
            </button>

            <div class="collapse navbar-collapse" id="navbarNav">
                <ul class="navbar-nav mx-auto mb-2 mb-lg-0">
                    <li class="nav-item">
                        <a class="nav-link text-white hover-primary" aria-current="page" href="/">Inicio</a>
                    </li>
                    <li class="nav-item">
                        <a class="nav-link text-white hover-primary" href="/servicios">Servicios</a>
                    </li>
                    <li class="nav-item">
                        <a class="nav-link text-white hover-primary" href="/store">Tienda</a>
                    </li>
                    <li class="nav-item">
                        <a class="nav-link text-white hover-primary" href="/galeria">Galería</a>
                    </li>
                    <li class="nav-item">
                        <a class="nav-link text-white hover-primary" href="/contact">Contacto</a>
                    </li>
                </ul>

                <div class="d-flex align-items-center">
                    <div class="dropdown me-3">
                        <button class="btn btn-link text-white dropdown-toggle text-decoration-none" type="button" id="languageDropdown" data-bs-toggle="dropdown" aria-expanded="false">
                            <i class="bi bi-globe me-1"></i> ES
                        </button>
                        <ul class="dropdown-menu dropdown-menu-dark" aria-labelledby="languageDropdown">
                            <li><a class="dropdown-item" href="#">ES</a></li>
                            <li><a class="dropdown-item" href="#">EN</a></li>
                        </ul>
                    </div>

                    <a href="/cart" class="text-white me-3">
                        <svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round" class="lucide lucide-shopping-cart h-6 w-6">
                            <circle cx="8" cy="21" r="1"></circle>
                            <circle cx="19" cy="21" r="1"></circle>
                            <path d="M2.05 2.05h2l2.66 12.42a2 2 0 0 0 2 1.58h9.78a2 2 0 0 0 1.95-1.57l1.65-7.43H5.12"></path>
                        </svg>
                    </a>

                    <AuthorizeView>
                        <Authorized>
                            <div class="dropdown">
                                <button class="btn btn-sm btn-secondary dropdown-toggle" type="button" id="miCuentaDropdown" data-bs-toggle="dropdown" aria-expanded="false">
                                    Mi Cuenta
                                </button>
                                <ul class="dropdown-menu dropdown-menu-end" aria-labelledby="miCuentaDropdown">
                                    <li>
                                        <h6 class="dropdown-header">Hola, @context.User.Identity?.Name</h6>
                                    </li>
                                    <li>
                                        <a class="dropdown-item" href="Account/Manage">Ir a mi perfil</a>
                                    </li>
                                    <li>
                                        <a class="dropdown-item" href="/mis-pedidos">Mis Pedidos</a>
                                    </li>
                                    <li>
                                        <form action="Account/Logout" method="post" class="dropdown-item p-0">
                                            <AntiforgeryToken />
                                            <input type="hidden" name="ReturnUrl" value="@NavigationManager.ToBaseRelativePath(NavigationManager.Uri)" />
                                            <button type="submit" class="btn w-100 text-start">
                                                <span class="bi bi-arrow-bar-left" aria-hidden="true"></span> Cerrar Sesión
                                            </button>
                                        </form>
                                    </li>
                                </ul>
                            </div>
                        </Authorized>
                        <NotAuthorized>
                            <a href="/Account/Login" class="btn btn-outline-light">
                                Iniciar Sesión
                            </a>
                        </NotAuthorized>
                    </AuthorizeView>

                    <AuthorizeView Roles="Admin">
                        <Authorized>
                            <a href="/admin/home" class="btn btn-outline-warning">
                                Ir al Panel Admin
                            </a>
                        </Authorized>
                        <NotAuthorized>
                        </NotAuthorized>
                    </AuthorizeView>
                </div>
            </div>
        </nav>
    </header>

    <div class="position-relative d-flex flex-column justify-content-center align-items-center text-white"
         style="height: 50vh; max-height: 25rem; background-image:url('/imagenes/store-hero.jpg'); background-size: cover; background-position: center;">

        <div class="position-absolute top-0 start-0 w-100 h-100 bg-dark opacity-50" style="z-index: -1;"></div>

        <!-- Botón Inicio eliminado -->

        <div class="container text-center py-5 position-relative z-1">
            <h1 class="display-4 fw-bold text-white mb-4">Nuestra Tienda</h1>
            <p class="lead mb-0">Encuentra piezas únicas de mobiliario y carpintería artesanal.</p>
        </div>
    </div>

    <section class="container py-5">
        <div class="row mb-4">
            <div class="col-md-6">
                <input type="text" class="form-control" placeholder="Buscar por nombre..."
                       @bind="SearchTerm" @bind:event="oninput" />
            </div>
            <div class="col-md-3">
                <select class="form-select" @bind="SelectedCategory">
                    <option value="">Todas las categorías</option>
                    @foreach (var cat in AvailableCategories)
                    {
                        <option value="@cat">@cat</option>
                    }
                </select>
            </div>
            <div class="col-md-3">
                <select class="form-select" @bind="SelectedPriceRange">
                    <option value="">Todos los precios</option>
                    <option value="0-5000">Hasta $5,000</option>
                    <option value="5001-10000">$5,001 - $10,000</option>
                    <option value="10001-20000">$10,001 - $20,000</option>
                    <option value="20001-max">Más de $20,000</option>
                </select>
            </div>
        </div>

        <div class="row g-4">
            @if (FilteredProducts == null)
            {
                <div class="text-center">
                    <div class="spinner-border text-primary"></div>
                    <p>Cargando productos...</p>
                </div>
            }
            else if (!FilteredProducts.Any())
            {
                <div class="text-center">
                    <p>No se encontraron productos.</p>
                </div>
            }
            else
            {
                @foreach (var product in FilteredProducts)
                {
                    var mainImage = product.Imagenes?.OrderBy(i => i.Orden).FirstOrDefault()?.UrlImagen ?? "/imagenes/no-image.jpg";
                    <div class="col-12 col-sm-6 col-md-4 col-lg-3">
                        <div class="card h-100 shadow-sm">
                            <img src="@mainImage" class="card-img-top" alt="@product.Detalle?.Descripcion" style="height: 200px; object-fit: cover;" />
                            <div class="card-body d-flex flex-column">
                                <h6 class="fw-bold mb-1 text-truncate" title="@product.Detalle?.Descripcion">
                                    Descripción: <span class="fw-normal">@product.Detalle?.Descripcion</span>
                                </h6>
                                <p class="text-muted mb-1 text-truncate" title="@product.Detalle?.Material">
                                    <strong>Material:</strong> @product.Detalle?.Material
                                </p>
                                <p class="mb-1 text-primary fw-bold">
                                    <strong>Precio:</strong> @product.Precio.ToString("C", new System.Globalization.CultureInfo("es-DO"))
                                </p>
                                <p class="mb-1 text-muted">
                                    <strong>Cantidad:</strong> @product.Cantidad
                                </p>
                                <p class="mb-2 text-muted text-truncate" title="@product.EstadoProducto?.Nombre">
                                    <strong>Estado:</strong> @product.EstadoProducto?.Nombre
                                </p>

                                <div class="mt-auto d-flex flex-wrap gap-1">
                                    @if (product.EstadoProducto?.Nombre?.ToLower() == "disponible")
                                    {
                                        <button class="btn btn-outline-primary btn-sm"
                                                @onclick="() => AddToCart(product.ProductoId)">
                                            Añadir
                                        </button>
                                    }
                                    else
                                    {
                                        <a class="btn btn-outline-warning btn-sm"
                                           href="/cotizaciones/solicitar/@product.ProductoId">
                                            Solicitar Cotización
                                        </a>
                                    }

                                    <a href="/producto/@product.ProductoId" class="btn btn-outline-secondary btn-sm">Ver Detalles</a>

                                    <AuthorizeView Roles="Admin">
                                        <Authorized>
                                            <a href="/admin/productos/editar/@product.ProductoId" class="btn btn-outline-secondary btn-sm">Editar</a>
                                        </Authorized>
                                    </AuthorizeView>
                                </div>
                            </div>
                        </div>
                    </div>
                }
            }
        </div>
    </section>
</main>

@code {
    private List<Producto>? AllProducts;
    private List<Producto>? FilteredProducts;
    private List<string> AvailableCategories = new();
    private List<EstadoProducto> Estados = new();

    private string SearchTerm = string.Empty;
    private string SelectedCategory = string.Empty;
    private string SelectedPriceRange = string.Empty;

    protected override async Task OnInitializedAsync()
    {
        AllProducts = await ProductoService.Listar(p => true);
        Estados = await EstadoProductoService.Listar();

        AvailableCategories = AllProducts
            .Where(p => p.Categoria != null)
            .Select(p => p.Categoria!.Nombre)
            .Distinct()
            .ToList();

        ApplyFilters();
    }

    private void ApplyFilters()
    {
        if (AllProducts == null)
        {
            FilteredProducts = new();
            return;
        }

        var query = AllProducts.AsEnumerable();

        if (!string.IsNullOrWhiteSpace(SearchTerm))
            query = query.Where(p => p.Detalle != null && p.Detalle.Descripcion.Contains(SearchTerm, StringComparison.OrdinalIgnoreCase));

        if (!string.IsNullOrEmpty(SelectedCategory))
            query = query.Where(p => p.Categoria != null && p.Categoria.Nombre == SelectedCategory);

        if (!string.IsNullOrEmpty(SelectedPriceRange))
        {
            query = SelectedPriceRange switch
            {
                "0-5000" => query.Where(p => p.Precio <= 5000),
                "5001-10000" => query.Where(p => p.Precio > 5000 && p.Precio <= 10000),
                "10001-20000" => query.Where(p => p.Precio > 10000 && p.Precio <= 20000),
                "20001-max" => query.Where(p => p.Precio > 20000),
                _ => query
            };
        }

        FilteredProducts = query.ToList();
    }

    private void AddToCart(int productoId)
    {
        var producto = AllProducts?.FirstOrDefault(p => p.ProductoId == productoId);
        if (producto != null)
        {
            CarritoService.AgregarProducto(producto, 1);
            Toast.ShowSuccess($"Producto añadido: {producto.Detalle?.Descripcion}");
        }
    }
}
