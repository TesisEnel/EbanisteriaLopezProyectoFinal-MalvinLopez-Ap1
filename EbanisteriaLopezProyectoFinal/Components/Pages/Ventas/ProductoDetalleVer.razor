@page "/producto/{ProductoId:int}"
@using EbanisteriaLopezProyectoFinal.Components.Services
@using EbanisteriaLopezProyectoFinal.Components.Models
@inject ProductoService ProductoService
@inject CarritoService CarritoService
@inject EstadoProductoService EstadoProductoService
@inject IJSRuntime JSRuntime
@inject NavigationManager NavigationManager

<PageTitle>Detalles del Producto</PageTitle>

@if (producto == null)
{
    <div class="text-center">
        <div class="spinner-border text-primary"></div>
        <p>Cargando detalles del producto...</p>
    </div>
}
else
{
    <div class="container py-5">
        <div class="row">
            <div class="col-md-6">
                <img src="@mainImage"
                     class="img-fluid mb-3 rounded shadow-sm"
                     alt="@producto.Detalle?.Descripcion"
                     style="max-height:400px; object-fit:cover;" />

                @if (producto.Imagenes?.Count > 1)
                {
                    <div class="d-flex flex-wrap gap-2">
                        @foreach (var img in producto.Imagenes.OrderBy(i => i.Orden))
                        {
                            <img src="@img.UrlImagen"
                                 @onclick="@(() => CambiarImagenPrincipal(img.UrlImagen))"
                                 class="img-thumbnail"
                                 style="width: 100px; height: 100px; object-fit: cover; cursor: pointer;"
                                 alt="Miniatura" />
                        }
                    </div>
                }
            </div>

            <div class="col-md-6">
                <h2 class="mb-3">@producto.Nombre</h2>

                <p><strong>Material:</strong> @producto.Detalle?.Material</p>
                <p><strong>Color:</strong> @producto.Detalle?.Color</p>
                <p><strong>Dimensiones:</strong> @producto.Detalle?.Dimensiones</p>
                <p><strong>Descripción:</strong><br />@producto.Detalle?.Descripcion</p>

                <p class="text-primary fw-bold fs-5">
                    Precio: @producto.Precio.ToString("C", new System.Globalization.CultureInfo("es-DO"))
                </p>

                <p class="text-muted"><strong>Cantidad disponible:</strong> @producto.Cantidad</p>

                <p><strong>Estado:</strong> @producto.EstadoProducto?.Nombre</p>

                <div class="mt-4 d-flex flex-wrap gap-2">
                    @if (producto.EstadoProducto?.Nombre?.ToLower() == "disponible")
                    {
                        <button class="btn btn-outline-primary btn-lg"
                                @onclick="AddToCart">
                            Añadir al carrito
                        </button>
                    }
                    else
                    {
                        <a class="btn btn-outline-warning btn-lg"
                           href="/cotizaciones/solicitar/@producto.ProductoId">
                            Solicitar cotización
                        </a>
                    }

                    <a class="btn btn-outline-secondary btn-lg"
                       href="/store">
                        Volver a la tienda
                    </a>
                </div>
            </div>
        </div>
    </div>
}

@code {
    [Parameter] public int ProductoId { get; set; }

    private Producto? producto;
    private string mainImage = "/imagenes/no-image.jpg";

    protected override async Task OnInitializedAsync()
    {
        producto = await ProductoService.Buscar(ProductoId);

        if (producto?.Imagenes?.Any() == true)
        {
            mainImage = producto.Imagenes.OrderBy(i => i.Orden).FirstOrDefault()?.UrlImagen ?? mainImage;
        }
    }

    private void CambiarImagenPrincipal(string url)
    {
        mainImage = url;
    }

    private void AddToCart()
    {
        if (producto != null)
        {
            CarritoService.AgregarProducto(producto, 1);
            JSRuntime.InvokeVoidAsync("alert", $"Producto añadido: {producto.Nombre}");
        }
    }
}
